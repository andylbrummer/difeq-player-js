{"version":3,"sources":["demo.js","ParamController.js","solver.js","trace.js"],"names":["angular","module","directive","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","scope","running","cmDemo","restrict","requires","transclude","replace","template","link","element","attrs","current","run","timestamp","startTime","t","startTimet","$watch","newVal","download","canvas","siblings","toBlob","blob","saveAs","filename","fullScreen","startSize","width","height","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","events","checkFullSize","document","mozFullScreenElement","webkitFullScreenElement","msFullScreenElement","fullScreenElement","console","log","jQuery","each","i","v","removeEventListener","addEventListener","screen","drawTrace","controller","$scope","$element","draw","trace","getContext","ctx","clearRect","strokeStyle","beginPath","moveTo","length","p","stroke","lineTo","advance","$apply","state","functionPathBuilder","func","extraScope","extend","f","values","paths","model","$attrs","parameters","setValues","key","value","push","name","min","max","step","pathRender","lineStyle","lineWidth","backgroundStyle","range","c","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","ratio","devicePixelRatio","sx","dx","sy","dy","fillStyle","fillRect","drawPaths","pathIndex","path","cur","val","densityRender","cc","fl","Math","floor","plot","functions","fIndex","x","y","map","parseFloat","params","ff","isArray","j","live_f","Function","concat","pp","pc","apply","ex","r","body","vars","traces","count","trace0","random","makeTrace","move","Array","prototype","scale","s","this","add","as","dt","step2","temp","slice","rk4","m1","m2","m3","m4","predCor","h","n","f1","bind","makeLorenz","a","b","z"],"mappings":"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","file":"cotm-demo.min.js","sourcesContent":["/**\r\n * Created by andy on 11/16/14.\r\n */\r\n(function () {\r\nangular\r\n    .module('cmDemo', [])\r\n    .directive('cmDemo', function () {\r\n        var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\n        return {\r\n            scope: {\r\n                running: '=',\r\n                cmDemo: '&'\r\n            },\r\n            restrict: 'E',\r\n            requires: ['draw'],\r\n            transclude: false,\r\n            replace: true,\r\n            template: '<div class=\"demo-controls\">\\\r\n                            <button class=\"btn\" ng-click=\"running = true\" ng-show=\"!running\"><span class=\"glyphicon glyphicon-play\"></span></button>\\\r\n                            <button class=\"btn\" ng-click=\"running = false\" ng-show=\"running\"><span class=\"glyphicon glyphicon-pause\"></button>\\\r\n                            <div class=\"btn-group\">\\\r\n                                <button class=\"btn\" ng-click=\"download()\" class=\"extra\"><span class=\"glyphicon glyphicon-picture\"></button>\\\r\n                                <button class=\"btn\" ng-click=\"fullScreen()\" class=\"extra\"><span class=\"glyphicon glyphicon-fullscreen\"></button>\\\r\n                            </div>\\\r\n                    </div>',\r\n            link: function (scope, element, attrs) {\r\n                scope.current = null;\r\n                var run = function (timestamp) {\r\n                    scope.startTime = scope.startTime || timestamp;\r\n                    scope.cmDemo({ t: timestamp - scope.startTimet });\r\n                    if (scope.running) requestAnimationFrame(run);\r\n                }\r\n                scope.$watch('running', function (newVal) {\r\n                    newVal && requestAnimationFrame(run);\r\n                });\r\n                scope.download = function () {\r\n                    var canvas = element.siblings('canvas')[0]; //This is a hack\r\n                    canvas.toBlob(function (blob) {\r\n                        saveAs(blob, attrs.filename || \"pretty image.png\");\r\n                    });\r\n                }\r\n                scope.fullScreen = function () {\r\n                    var canvas = element.siblings('canvas')[0]; //This is a hack\r\n                    scope.startSize = { width: canvas.width, height: canvas.height };\r\n                    if (canvas.requestFullscreen) {\r\n                        canvas.requestFullscreen();\r\n                    } else if (canvas.msRequestFullscreen) {\r\n                        canvas.msRequestFullscreen();\r\n                    } else if (canvas.mozRequestFullScreen) {\r\n                        canvas.mozRequestFullScreen();\r\n                    } else if (canvas.webkitRequestFullscreen) {\r\n                        canvas.webkitRequestFullscreen();\r\n                    }\r\n\r\n                    var events = ['webkitfullscreenchange', 'msfullscreenchange', 'mozfullscreenchange', 'fullscreenchange'];\r\n                    var checkFullSize = function () {\r\n                        if (!(document.mozFullScreenElement || document.webkitFullScreenElement || document.msFullScreenElement || document.fullScreenElement)) {\r\n                            console.log('unsize')\r\n                            canvas.width = scope.startSize.width;\r\n                            canvas.height = scope.startSize.height;\r\n                        }\r\n                        jQuery.each(events, function (i, v) {\r\n                            document.removeEventListener(v, checkFullSize);\r\n                        });\r\n                    };\r\n\r\n                    jQuery.each(events, function (i, v) {\r\n                        document.addEventListener(v, checkFullSize);\r\n                    });\r\n\r\n                    canvas.width = window.screen.width;\r\n                    canvas.height = window.screen.height;\r\n                }\r\n            }\r\n        };\r\n    })\r\n    .directive('drawTrace', function () {\r\n        return {\r\n            scope: {\r\n                drawTrace: '='\r\n            },\r\n            controller: ['$scope', '$element', function ($scope, $element) {\r\n                $scope.$watch(\"drawTrace.t\", function () {\r\n                    if (!$scope.draw || !$scope.drawTrace)\r\n                        return;\r\n\r\n                    $scope.draw($scope.drawTrace.trace, $element[0].getContext('2d'));\r\n                });\r\n\r\n                $scope.draw = function (v, ctx) {\r\n                    var h = ctx.canvas.height, w = ctx.canvas.width;\r\n                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n                    ctx.strokeStyle = 'hsla(0, 50%, 50%, 0.05)';\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo((v[v.length - 1][0] + 60) * 5, (v[v.length - 1][1] + 60) * 5);\r\n                    for (var i = v.length; i--;) {\r\n                        var p = v[i];\r\n                        if (i == 60000) { ctx.stroke(); ctx.beginPath(); ctx.strokeStyle = 'hsla(240, 80%, 50%, 0.05)'; }\r\n                        ctx.lineTo((p[0] + 60) * 5, (p[1] + 60) * 5);\r\n                    }\r\n                    ctx.stroke();\r\n                }\r\n            }]\r\n        }\r\n    })\r\n    .controller('windCtrl', [ '$scope', function ($scope) {\r\n        $scope.advance = function (t) {\r\n            $scope.$apply(function () {\r\n                $scope.state.t += 0.01;\r\n            });\r\n        }\r\n    }]);\r\n})();","var functionPathBuilder = function (func, extraScope) {\r\n    var scope = angular.extend({\r\n        f: '=',\r\n        t: '=',\r\n        values: '=',\r\n        paths: '=',\r\n        model: '='\r\n    }, extraScope); \r\n    return {\r\n        restrict: 'A',\r\n        scope: scope,\r\n        controller: ['$scope', '$attrs', function ($scope, $attrs) {\r\n            $scope.$watch('t', function () { func($scope, $attrs); });\r\n            $scope.$watch('f', function () { func($scope, $attrs); });\r\n            $scope.$watch('values', function () { func($scope, $attrs); }, true);\r\n        }]\r\n    };\r\n};\r\n\r\n\r\nangular\r\n    .module('paramApp', ['ui.bootstrap-slider'])\r\n    .directive('parameters', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                parameters: '=',\r\n                values: '='\r\n            },\r\n            template: '<ul class=\"ctrl-parameters\"><li ng-repeat=\"p in values\"><span ng-bind=\"p.name\"></span><div slider max=\"{{p.max}}\" min=\"{{p.min}}\" step=\"{{p.step}}\" ng-model=\"p.value\"></div></li></ul>',\r\n            controller: ['$scope', function ($scope) {\r\n                $scope.setValues = function () {\r\n                    var values = [];\r\n                    jQuery.each($scope.parameters, function (key, value) {\r\n                        values.push({ name: key, value: value[0] || 0, min: value[1] || -1, max: value[2] || 1, step: value[3] || 0.05 });\r\n                    });\r\n                    return $scope.values = values;\r\n                }\r\n                $scope.setValues();\r\n            }]\r\n        }\r\n    })\r\n    .directive('pathRender', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                pathRender: '=',\r\n                lineStyle: '=',\r\n                lineWidth: '=',\r\n                backgroundStyle: '=',\r\n                range: '=' // [minX, maxX, minY, maxY]\r\n            },\r\n            controller: ['$scope', '$element', function ($scope, $element) {\r\n                var c = $element[0];\r\n                var ctx = c.getContext('2d');\r\n                var range = $scope.range || [-1, 1, -1, 1];\r\n                var backingStore = ctx.backingStorePixelRatio ||\r\n                    ctx.webkitBackingStorePixelRatio ||\r\n                    ctx.mozBackingStorePixelRatio ||\r\n                    ctx.msBackingStorePixelRatio ||\r\n                    ctx.oBackingStorePixelRatio ||\r\n                    ctx.backingStorePixelRatio || 1;\r\n\r\n                var ratio = (window.devicePixelRatio || 1) / backingStore;\r\n                var sx = c.width / (range[1] - range[0])/ratio, dx = range[0];\r\n                var sy = c.height / (range[3] - range[2])/ratio, dy = range[2];\r\n                ctx.lineWidth = $scope.lineWidth || 2.0;\r\n\r\n                ctx.fillStyle = $scope.backgroundStyle || 'rgba(30, 30, 180, 0.025)';\r\n                for(var i=20; i--; ) ctx.fillRect(0, 0, c.width, c.height);\r\n\r\n                var drawPaths = function (paths) {\r\n                    ctx.lineWidth = 0.5;\r\n                    ctx.strokeStyle = $scope.lineStyle || 'rgba(255,255,255,1.0)';\r\n                    ctx.fillStyle = $scope.backgroundStyle || 'rgba(30, 30, 180, 0.025)';\r\n                    ctx.fillRect(0, 0, c.width, c.height);\r\n                    for (var pathIndex = paths.length; pathIndex--;) {\r\n                        var path = paths[pathIndex];\r\n                        ctx.beginPath();\r\n                        var cur = path[path.length - 1];\r\n                        ctx.moveTo((cur[0] - dx) * sx, (cur[1] - dy) * sy);\r\n                        for (var i = path.length; i--;) {\r\n                            var p = path[i];\r\n                            ctx.lineTo((p[0] - dx) * sx, (p[1] - dy) * sy);\r\n                        }\r\n                        ctx.stroke();\r\n                    }\r\n                };\r\n                $scope.$watch('pathRender', function (val) {\r\n                    if (val && val.length && val.length > 0) drawPaths(val);\r\n                });\r\n            }]\r\n        }\r\n    })\r\n    .directive('densityRender', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                densityRender: '='\r\n            },\r\n            controller: ['$scope', '$element', function ($scope, $element) {\r\n                var c = $element[0];\r\n                var ctx = c.getContext('2d');\r\n                var dx = c.width / 2;\r\n                var dy = c.height / 2;\r\n                var cc = {};\r\n                var fl = Math.floor;\r\n\r\n                var plot = function (functions) {\r\n                    ctx.fillStyle = 'rgba(0,0,0,1.0)';\r\n                    ctx.fillRect(0, 0, c.width, c.height);\r\n                    for (var fIndex = functions.length; fIndex--;) {\r\n                        var f = functions[fIndex];\r\n                        for (var x = c.width; x--;) {\r\n                            for (var y = c.height; y--;) {\r\n                                var val = fl(f(x - dx, y - dy) * 100);\r\n                                if (val < 0) {\r\n                                    ctx.fillStyle = cc[val] || (cc[val] = 'hsl(250,' + -val + '%,30%)');\r\n                                } else {\r\n                                    ctx.fillStyle = cc[val] || (cc[val] = 'hsl(50,' + val + '%,30%)');\r\n                                }\r\n                                ctx.fillRect(x, y, 1, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                $scope.$watch('densityRender', function (val) {\r\n                    if (val && val.length && val.length > 0) plot(val);\r\n                });\r\n            }]\r\n        }\r\n    })\r\n    .directive('graph', function () {\r\n        return functionPathBuilder(function ($scope, $attrs) {\r\n            try {\r\n                if (!$scope.f || !$scope.values) return;\r\n\r\n                var p = jQuery.map($scope.values, function (x) { return parseFloat(x.value); });\r\n                var params = jQuery.map($scope.values, function (x) { return x.name; });\r\n                var paths = [];\r\n\r\n                var ff = $scope.f;\r\n                if (!jQuery.isArray(ff)) ff = [ff];\r\n\r\n                for (var j = 0; j < ff.length; ++j) {\r\n                    var live_f = new Function(['t'].concat(params), 'return ' + ff[j] + ';');\r\n                    var path = [], pp = [-1].concat(p), pc = {};\r\n                    for (var x = -1; x < 1.02; x += 0.01) {\r\n                        pp[0] = x;\r\n                        path.push([x, live_f.apply(pc, pp)]);\r\n                    }\r\n                    paths.push(path);\r\n                }\r\n\r\n                $scope.paths = paths;\r\n            } catch (ex) {\r\n                //alert(ex);\r\n            }\r\n        });\r\n    })\r\n    .directive('parametric', function () {\r\n        return functionPathBuilder(function ($scope, $attrs) {\r\n            try {\r\n                if (!$scope.f || !$scope.values) return;\r\n\r\n                var p = jQuery.map($scope.values, function (x) { return parseFloat(x.value); });\r\n                var params = jQuery.map($scope.values, function (x) { return x.name; });\r\n                var paths = [];\r\n\r\n                var ff = $scope.f;\r\n                if (!jQuery.isArray(ff)) ff = [ff];\r\n\r\n                for (var j = 0; j < ff.length; ++j) {\r\n                    var live_f = new Function(['t'].concat(params), 'return ' + ff[j] + ';');\r\n                    var path = [], pp = [0].concat(p), pc = {};\r\n                    for (var t = -180; t < 180; ++t) {\r\n                        pp[0] = t / 15;\r\n                        var r = live_f.apply(pc, pp);\r\n                        path.push([r[0], r[1]]);\r\n                    }\r\n                    paths.push(path);\r\n                }\r\n\r\n                $scope.paths = paths;\r\n            } catch (ex) {\r\n                //alert(ex);\r\n            }\r\n        });\r\n    })\r\n    .directive('density', function () {\r\n        return functionPathBuilder(function ($scope, $attrs) {\r\n            try {\r\n                if (!$scope.f || !$scope.values) return;\r\n\r\n                var p = jQuery.map($scope.values, function (x) { return x.name + '=' + x.value; });\r\n                var params = jQuery.map($scope.values, function (x) { return x.name; });\r\n                var functions = [];\r\n\r\n                var ff = $scope.f;\r\n                if (!jQuery.isArray(ff)) ff = [ff];\r\n\r\n                for (var j = 0; j < ff.length; ++j) {\r\n                    var body = 'var ' + p + ';return ' + ff[j] + ';';\r\n                    var live_f = new Function(['x', 'y'].concat(params), body);\r\n                    functions.push(live_f);\r\n                }\r\n\r\n                $scope.paths = functions;\r\n            } catch (ex) {\r\n                //alert(ex);\r\n            }\r\n        });\r\n    })\r\n    .directive('wind', function () {\r\n        return functionPathBuilder(function ($scope, $attrs) {\r\n            try {\r\n                if (!$scope.f || !$scope.values) return;\r\n\r\n                var model = $scope.model || {};\r\n                var params = jQuery.map($scope.values, function (x) { return x.name; });\r\n                var functions = [];\r\n\r\n                var range = $scope.range || [-1, 1, -1, 1];\r\n                var sx = range[1] - range[0], dx = range[0];\r\n                var sy = range[3] - range[2], dy = range[2];\r\n\r\n                var ff = $scope.f;\r\n                if (!jQuery.isArray(ff)) ff = [ff];\r\n                var vars = [{name: 'x', value: 'v[0]'}, {name: 'y', value: 'v[1]'}, {name: 'z', value: 'v[2]'}].concat($scope.values);\r\n                var p = jQuery.map(vars, function (x) { return x.name + '=' + x.value; });\r\n\r\n                var body = 'var ' + p + '; return [' + ff[0] + '];';\r\n                model.live_f = new Function(['v'], body);\r\n\r\n                var traces = ($scope.model && $scope.model.traces) || [];\r\n                var t = $scope.t;\r\n                var count = $scope.count || 3000;\r\n                for (var j = count; j--;) {\r\n                    var trace0 = traces[j]\r\n                    if (!trace0 || Math.random() < 0.003) {\r\n                        var p = [sx * Math.random() + dx, sy * Math.random() + dy, t];\r\n                        var trace = makeTrace(model, p, 0.01).move(2);\r\n                        traces[j] = trace;\r\n                    } else {\r\n                        trace0.move(1);\r\n                    }\r\n                }\r\n                $scope.model = model;\r\n                $scope.model.traces = traces;\r\n                $scope.paths = traces.map(function (t) { return t.trace; });\r\n            } catch (ex) {\r\n                console.log(ex);\r\n            }\r\n        }, {\r\n            range: '=',\r\n            count: '='\r\n        });\r\n    })\r\n        .directive('wind2', function () {\r\n            return functionPathBuilder(function ($scope, $attrs) {\r\n//                try {\r\n                    if (!$scope.f || !$scope.values) return;\r\n\r\n                    var model = $scope.model || {};\r\n                    var params = jQuery.map($scope.values, function (x) { return x.name; });\r\n                    var functions = [];\r\n\r\n                    var range = $scope.range || [-1, 1, -1, 1];\r\n                    var sx = range[1] - range[0], dx = range[0];\r\n                    var sy = range[3] - range[2], dy = range[2];\r\n\r\n                    var ff = $scope.f;\r\n                    if (!jQuery.isArray(ff)) ff = [ff];\r\n                    var vars = [{name: 'x', value: 'v[0]'}, {name: 'y', value: 'v[1]'}, {name: 'vx', value: 'v[2]'}, {name: 'vy', value: 'v[3]'}, {name: 't', value: 'v[4]'}]\r\n                                        .concat($scope.values);\r\n                    var p = jQuery.map(vars, function (x) { return x.name + '=' + x.value; });\r\n\r\n                    var body = 'var ' + p + '; return [' + ff[0] + '];';\r\n                    model.live_f = new Function(['v'], body);\r\n\r\n                    var traces = ($scope.model && $scope.model.traces) || [];\r\n                    var t = $scope.t;\r\n                    var count = $scope.count || 1000;\r\n                    for (var j = count; j--;) {\r\n                        var trace0 = traces[j]\r\n                        if (!trace0 || Math.random() < 0.01) {\r\n                            var p = [sx * Math.random() + dx, sy * Math.random() + dy, 1, 0, t];\r\n                            var trace = makeTrace(model, p, 0.01).move(2);\r\n                            traces[j] = trace;\r\n                        } else {\r\n                            trace0.move(1);\r\n                        }\r\n                    }\r\n                    $scope.model = model;\r\n                    $scope.model.traces = traces;\r\n                    $scope.paths = traces.map(function (t) { return t.trace; });\r\n//                } catch (ex) {\r\n//                    console.log(ex);\r\n//                }\r\n            }, {\r\n                range: '=',\r\n                count: '='\r\n            });\r\n        }).controller(\"null\", function () { });","//differential solvers.\r\n\r\nArray.prototype.scale = function (s) {\r\n    for (var i = this.length; i--;) {\r\n        this[i] = this[i] * s;\r\n    }\r\n    return this;\r\n}\r\n\r\nArray.prototype.add = function (v) {\r\n    for (var i = this.length; i--; ) {\r\n        this[i] = this[i] + v[i];\r\n    }\r\n    return this;\r\n}\r\n\r\nArray.prototype.as = function(s, dt) {\r\n    for(var i = this.length; i--; ) {\r\n        this[i] = this[i] + dt * s[i];\r\n    }\r\n    return this;\r\n}\r\n\r\nArray.prototype.step = function (f, dt) {\r\n    return this.as(f(this), dt);\r\n}\r\n\r\nArray.prototype.step2 = function (f, dt) {\r\n    var temp = this.slice(0).step(f, dt/2);\r\n    return this.add(f(temp).scale(dt));\r\n}\r\n\r\nArray.prototype.rk4 = function (f, dt) {\r\n    var m1 = f(this);\r\n    var m2 = f(this.slice(0).as(m1, dt / 2));\r\n    var m3 = f(this.slice(0).as(m2, dt / 2));\r\n    var m4 = f(this.slice(0).as(m3, dt));\r\n    return this.slice(0).add(m1.as(m2, 2).as(m3, 2).add(m4).scale(dt / 6));\r\n}\r\n\r\nArray.prototype.predCor = function (f, dt, h) {\r\n}","var makeTrace = function (f, p, dt) {\r\n    //generates a trace of a multidimensional first order differential equation using the runga-kutta method.\r\n    //f - the differential equation\r\n    //p - the initial position of the trace\r\n    //dt - the step size of the approximation.\r\n    return {\r\n        trace: [],\r\n        p: p,\r\n        f: f,\r\n        dt: dt,\r\n        t: 0,\r\n        //Advance n steps, maintaining a constant array length.\r\n        move: function (n) {\r\n            var trace = n < this.trace.length ? this.trace.slice(n) : [],\r\n                p = this.p,\r\n                f1 = this.f.live_f || this.f;\r\n                f = f1.bind(this),\r\n                dt = this.dt;\r\n            this.t += this.dt;\r\n            for (var i = n; i--;) {\r\n                trace.push(p);\r\n                p = p.rk4(f, dt);\r\n                p = p.rk4(f, dt);\r\n                p = p.rk4(f, dt);\r\n            }\r\n            this.p = p;\r\n            this.trace = trace;\r\n            return this;\r\n        }\r\n    }\r\n}\r\nvar makeLorenz = function (a, r, b) {\r\n    return function (p) {\r\n        var x = p[0], y = p[1], z = p[2];\r\n        return [\r\n                a * (y - x),\r\n                x * (r - z) - y,\r\n                x * y - b * z\r\n        ];\r\n    }\r\n};\r\n"],"sourceRoot":"/source/"}